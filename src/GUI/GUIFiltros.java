/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import io.ImageManager;
import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import muestreo.negativo;
import muestreo.temperatura;

/**
 *
 * @author mijum
 */
public class GUIFiltros extends javax.swing.JFrame {

    /**
     * Creates new form GUIFiltros
     */
    public GUIFiltros() {
        initComponents();
        jSlider1.setValue(0);
        silu.setValue(0);
        negativos.setEnabled(false);
        negativos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos los canales", "Rojo", "Verde", "Azul","Rojo y verde","Rojo y Azul","Verde y Azul"}));
        this.jSlider1.addChangeListener( new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent ce) {
                JSlider so = (JSlider) ce.getSource();
                fin =  t.temperaturaImagen(ori, so.getValue());
                Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
            }
            
           
        });
        this.silu.addChangeListener( new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent ce) {
                JSlider so = (JSlider) ce.getSource();
                fin =  t.traslacion(ori, so.getValue());
                Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
            }
           
        });
    }
    ImageManager img = new ImageManager();
    Image ori,fin;
    Boolean iluminacion = false, nega = false, temperatura = false;
    temperatura t = new temperatura();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        abrirImagen = new javax.swing.JButton();
        negativos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Resultante = new javax.swing.JLabel();
        Original = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        save = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        silu = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1484, 757));

        abrirImagen.setText("Abrir");
        abrirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirImagenActionPerformed(evt);
            }
        });

        negativos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        negativos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                negativosItemStateChanged(evt);
            }
        });
        negativos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negativosActionPerformed(evt);
            }
        });

        jLabel3.setText("Hacer negativo en:");

        Resultante.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Original.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        save.setText("Guardar");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(255);
        jSlider1.setMinimum(-255);

        silu.setMaximum(255);
        silu.setMinimum(-255);

        jLabel1.setText("Iluminacion");

        jLabel2.setText("Temperatura");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Original, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(abrirImagen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(save)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Resultante, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(negativos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(610, 610, 610)
                        .addComponent(jLabel1)
                        .addGap(224, 224, 224)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(471, 471, 471)
                    .addComponent(silu, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(757, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(322, 322, 322))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Original, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Resultante, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(abrirImagen)
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(negativos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(25, 25, 25))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(727, Short.MAX_VALUE)
                    .addComponent(silu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(47, 47, 47)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirImagenActionPerformed
        // TODO add your handling code here:
        this.ori = img.openImage();
        Original.setIcon(new ImageIcon(img.reedimensionar(this.ori, Original.getHeight(),Original.getWidth()))); 
        Resultante.setIcon(new ImageIcon(img.reedimensionar(this.ori, Original.getHeight(),Original.getWidth()))); 
        
        if (nega) {
        fin = negativo.generarImagenEnNegativo(this.ori, true, true, true);
        negativos.setEnabled(true);
        }
        if (iluminacion) {
            
        }
        if (temperatura) {
            
          fin =  t.temperaturaImagen(ori, 0);
        }
       
    }//GEN-LAST:event_abrirImagenActionPerformed

    private void negativosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negativosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_negativosActionPerformed

    private void negativosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_negativosItemStateChanged
        // TODO add your handling code here: "Todos los canales", "Rojo", "Verde", "Azul","Rojo y verde","Rojo y Azul","Verde y Azul","Azul y Verde"
        if (negativos.getSelectedItem() == "Todos los canales") {
            fin = negativo.generarImagenEnNegativo(this.ori, true, true, true);
            Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
        }
        if (negativos.getSelectedItem() == "Rojo") {
            fin = negativo.generarImagenEnNegativo(this.ori, true, false, false);
             Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
        }
        if (negativos.getSelectedItem() == "Verde") {
            fin = negativo.generarImagenEnNegativo(this.ori, false, true, false);
            Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
        }
        if (negativos.getSelectedItem() == "Azul") {
            fin = negativo.generarImagenEnNegativo(this.ori, false, false, true);
             Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
        }
        if (negativos.getSelectedItem() == "Rojo y verde") {
            fin = negativo.generarImagenEnNegativo(this.ori, true, true, false);
            Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
        }
        if (negativos.getSelectedItem() == "Rojo y Azul") {
            fin = negativo.generarImagenEnNegativo(this.ori, true, false, true);
             Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
        }
        if (negativos.getSelectedItem() == "Verde y Azul") {
           fin = negativo.generarImagenEnNegativo(this.ori, false, true, true);
            Resultante.setIcon(new ImageIcon(img.reedimensionar(fin, Original.getHeight(),Original.getWidth())));
        }
    }//GEN-LAST:event_negativosItemStateChanged

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
            // TODO add your handling code here:
            img.guardarImagen(fin);
        } catch (IOException ex) {
            Logger.getLogger(GUIFiltros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIFiltros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Original;
    private javax.swing.JLabel Resultante;
    private javax.swing.JButton abrirImagen;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JComboBox<String> negativos;
    private javax.swing.JButton save;
    private javax.swing.JSlider silu;
    // End of variables declaration//GEN-END:variables
}
